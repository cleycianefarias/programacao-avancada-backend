/*console.log("Hello, world, Javascript!")

//variáveis
var x = 10 //number
//formas mais convenientes de declarar variáveis
let y = 50
const z = "''"

y = 20
console.log(y)

if(1){
    let y = 15
    console.log(y)
}

console.log(y)

//tipos

const nome = 'Victor'
console.log(nome)
console.log(typeof nome)

const idade = 31
console.log(idade)
console.log(typeof idade)

const peso = 72.3
console.log(peso)
console.log(typeof peso)

//null
const nada = null
console.log(nada)
console.log(typeof nada)

//undefined
let indefinido
console.log(indefinido)
console.log(typeof indefinido)

//bool
const vouf = true
console.log(vouf)
console.log(typeof vouf)

//array
const vetor = ['Java', 10, false]
console.log(vetor[1])
console.log(typeof vetor)
console.log(vetor.length)

//object literals

const usuario = {
    email : 'fariascleyciane@email.com',
    senha : 'teste45',
    nome : 'cleyciane',
    idade : 24
}
console.log(usuario.email)
console.log(usuario.senha)
console.log(usuario.nome)
console.log(usuario.idade)
console.log(typeof usuario)

const nome = "Cleyciane Farias de Lima"
console.log(nome.length)
console.log(Object(nome))
const stringParaVetor = nome.split('')
console.log(stringParaVetor)
console.log(nome.toLowerCase())
console.log(nome.toUpperCase())

console.log(nome)
const nomeMaiusculo = nome.toUpperCase()
console.log(nomeMaiusculo)
//console.log(nomeMaiusculo[nomeMaiusculo.length])
console.log(nomeMaiusculo[nomeMaiusculo.length-1]) //buscar um texto dentro de um texto
console.log(nomeMaiusculo[0])
console.log(nomeMaiusculo.indexOf('MA'))
console.log(nomeMaiusculo.slice(0,9)) //pegar um intervalo de numeros

//arrays, vetores e listas
const lista = ['AA','B','C','D','E']
console.log(lista.length)
console.log(lista[2])
console.log(typeof lista)
lista[5] = 'F'
console.log(lista[5])
lista[0] = 'X'
console.log(lista[0])
console.log(lista)
//lista = "Testando atribuição de texto para lista"
//console.log(lista)

console.log(lista.push('teste'))
console.log(lista)
console.log(lista.pop())
console.log(lista)
console.log(lista.shift())
console.log(lista.shift())
console.log(lista.shift())
console.log(lista)
console.log(lista.unshift('teste'))
console.log(lista)

const produto = {
    nome: "Camisa",
    preco: 9.99,
    emEstoque: true,
    size: ['P','M','G'],
    'Cor': 'azul'
}
console.log(produto.Cor)
console.log(produto['size'][2])
console.log(produto[2])

//destructing  -  recurso para objetos para extrair conteúdo de dentro deles
const {preco, emEstoque} = produto
console.log(preco , emEstoque)
//const preco = produto.preco
const lista = ['char1','char2','C','D','E']
const [char1,char2] = lista
console.log(char1)
console.log(char2)

//JSON - javaScript bject notation
const doguinho = {
    nome:'jully',
    idade: 8
}

const json = JSON.stringify(doguinho)
console.log(json)
console.log(typeof json)
const json2 = JSON.parse(json)
console.log(json2)
console.log(typeof json2)

const vetor = json.split(',')
console.log(vetor[0] + '}')
const jsonErrado = JSON.stringify('{"nome":"jully","idade":8}')
console.log(jsonErrado)


//estruturas, métodos de listas, funcoes
const n = 100
if(n>10){//> < >= <= == != 
    console.log('Teste de entrada no if.')
}

const texto = '0'
if(texto === 0)
    console.log("os dados são iguais")
else if (true)
    console.log('segundo if - if alinhado')
else
    console.log('saída...')

//operador ternário
const resultado = n>20 ? true : false
console.log(resultado)
console.log(typeof resultado)

//repetição: precisa de três partes - variavel de controle e inicializaçao dela;
// condição/criterio de parada; alteração do valor da variavel de controle
let contador = 0;
const lista = [1, 7, 3, 64, 2, 0]
while(contador<lista.length){
    console.log('Elemento da vez é: '+lista[contador] + '.')
    contador++ //contador = contador + 1
}

const outraLista = ['a','b','d','e','c']
for(let contador = 0; contador<outraLista.length; contador++){
    console.log(`Elemento da vez é: ${outraLista[contador]}.`)
}

//template literals, or template strings
const testeLiteral = (`\``==="`")
console.log(testeLiteral)

const a=3,b=5
console.log('oito é ' + (a+b) +' e não ' + (2*a+b))
console.log(`oito é  ${(a+b)}  
e não  ${(2*a+b)}`)

//métodos de listas - arrays - vetores
const nomes = ['Abimael', 'Cleyciane', 'Paulo', 'Victor']
//funções anonimas é realizado uma lista de parâmetros podendo utilizar como quiser
nomes.forEach(function(nome){
    console.log(nome)
})

//modificar conteudo dentro da estrutura
const nomesModificados = nomes.map(function(nome){
    if (nome === 'Paulo') {
        return (nome = 'O Grande')        
    }else{
        return nome
    }
})

nomesModificados.forEach(function(nome){
    console.log(nome)
})

const numerosGrandes = ['6', '1', '9', '17', '99', '94'].filter
(function(numero){
    return (numero>10)
})

numerosGrandes.forEach(function(nome){
    console.log(nome)
})

console.log(numerosGrandes.reduce(function(total, numero){
    return ( parseInt(total)+parseInt(numero))
}))



//criando funções
function minhaFuncao() {
    console.log('Estou dentro da minha função')
}
minhaFuncao()

//função com o return
const funcao = function minhaFuncao(nome, sobrenome) {
    console.log(typeof nome, typeof sobrenome)
    return (` ${nome} ${sobrenome}`)
}

const nome = 'Cleyciane'
const sobrenome = 'Farias'
console.log(funcao(nome, sobrenome))
minhaFuncao(10, 20)
console.log(typeof funcao)

// arrow functions - funções flash
const soma = (n1,n2) => n1+n2
console.log(soma(5,3))

const soma2 = function somaDeDoisValores(a,b){
    return a+b
} 

const lista =  ['esse cara é maior','b','c','d']
console.log(lista.map((elemento) =>{
    return elemento.length
}))

const lista =  ['esse cara é maior','b','c','d']
console.log(lista.map(elemento => elemento.length))

let x = 10

function fora(){
    let x = 7
    function somarXmais5(){
        return x+5
    }
   return somarXmais5()
}

console.log(fora())

console.log(typeof fora())

//reduzindo a função do método fora
let x =10
const fora = () => (() => x+5) ()

console.log(fora())
console.log(typeof fora())


//reduzindo a função do método fora
let x =10
const fora = () => ((x=7), ()=>x+5) ()

console.log(fora())
console.log(typeof fora())

*/

